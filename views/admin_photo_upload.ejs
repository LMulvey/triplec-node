<% include partials/_header %>


<div class="container">
    <div class="col-sm-8 col-sm-offset-2">
        <h1>Upload an Image üñºÔ∏è</h1>
            <div class="alert invisible"></div>
        <div class="form-group">
            <form action="upload" 
            enctype="multipart/form-data" class="dropzone" id="dropper" method="post">
            </form>
        </div>
        <button id="submitAll" class="invisible form-control btn btn-success">
            Submit!
        </button>
    </div>
</div>

<script src="/js/dropzone.js"></script>
<script>
    let galleries = <%- JSON.stringify( galleries ); %>
    function createDropdown(name) {
        let html = `<select name="imageGallery" class="form-control" id="${name}">`;
            galleries.forEach(gallery => {
            html += `<option value="${gallery._id}">${gallery.info.name}</option>`;
        });
        return `${html}</select>`;
    }
    
  Dropzone.options.dropper = {
        url: 'upload',
        maxFilesize: 25, // MB
        maxFiles: 30,
        autoProcessQueue: false,
        acceptedFiles: "image/*",
        addRemoveLinks: true,
        uploadMultiple: true,
        paramName: function() { return 'images' },
        method: 'post',
        parallelUploads: 30,
        init: function(file) {
                let submitButton = document.querySelector("#submitAll");
                let alert = document.querySelector(".alert");

                submitButton.addEventListener("click", (e) => {
                    let inputs = document.querySelectorAll('input[name=imageTitle]');
                    let foundBlank = false;
                    inputs.forEach(input => {
                        if(input.value == '') {
                            foundBlank = true;
                            input.style.borderColor = 'red';
                        }
                    });
                    if(foundBlank) {
                        alert.classList.add('alert-warning');
                        alert.innerText = `Ensure all titles/descriptions are filled out.`;
                        alert.style.visibility = 'visible';
                    } else {
                        e.preventDefault();
                        e.stopPropagation();
                        this.processQueue(); 
                    }
                });

                this.on("addedfile", function (file) {
                    var unique_field_id = new Date().getTime();
                    submitButton.style.visibility = 'visible';
                   

                    title = file.title == undefined ? "" : file.title;
                    file._titleLabel = Dropzone.createElement("<label for='title'>Title *</label>");
                    file._titleBox = Dropzone.createElement(`<input id='${file.name + unique_field_id}_title' class='form-control' type='text' name='imageTitle' value="${title}" required>`);
                    file.previewElement.appendChild(file._titleLabel);
                    file.previewElement.appendChild(file._titleBox);

                    description = file.description == undefined ? "" : file.description;
                    file._descriptionId = `${file.name + unique_field_id}_desc`;
                    file._descriptionLabel = Dropzone.createElement(`<label for="description">Description</label>`);
                    file._descriptionBox = Dropzone.createElement(`<input id='${file._descriptionId}' class='form-control' type='text' name='imageDesc' value='${description}'>`);
                    file.previewElement.appendChild(file._descriptionLabel);
                    file.previewElement.appendChild(file._descriptionBox);
                    
                    dropdownLabel = Dropzone.createElement(`<label for="${name}">Gallery</label>`);
                    dropdown = Dropzone.createElement(createDropdown(`${file.name}${unique_field_id}_gallery`));
                    file.previewElement.appendChild(dropdownLabel);
                    file.previewElement.appendChild(dropdown); 
               });

               this.on("errors", function (file, msg, xhr) {
                   alert.classList.add('alert-warning');
                   alert.innerText = `There were some errors: ${msg}${xhr}`;
                   alert.style.visibility = 'visible';
               });

               this.on("queuecomplete", () => {
                   if(alert.classList.contains('alert-warning')) alert.classList.remove('alert-warning');
                    alert.classList.add('alert-success');
                    alert.innerText = 'Photos uploaded! Redirecting to dashboard...';
                    alert.style.visibility = 'visible';
                    setTimeout(() => window.location.href = "/admin/", 3000);
               });
        }
    };
</script>
<% include partials/_footer %>
